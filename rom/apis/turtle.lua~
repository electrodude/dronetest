-- TURTLE API

local turtle = {}

function turtle.suck()
	local pos = active_systems[sys.id].pos
	local node = minetest.get_node(pos)
	local meta = minetest.get_meta(pos)
	local npos = minetest.facedir_to_dir(node.param2)
	npos.x = npos.x + pos.x
	npos.y = npos.y + pos.y
	npos.z = npos.z + pos.z
	local ninv = minetest.get_inventory({type="node",pos=npos})
	print(dump(ninv:get_lists()))
end
function turtle.forward()
	local pos = active_systems[sys.id].pos
	local node = minetest.get_node(pos)
	local meta = minetest.get_meta(pos)
	local npos = minetest.facedir_to_dir(node.param2)
	npos.x = npos.x + pos.x
	npos.y = npos.y + pos.y
	npos.z = npos.z + pos.z
	local targetNode = minetest.get_node(npos)
	print("move from "..dump(pos).." to "..dump(npos))
	if targetNode ~= nil and targetNode.name ~= "air" then -- blocked by node
		print("blocked!")
		return false
	end
	minetest.set_node(npos,node)
	minetest.set_meta(npos,meta)
	minetest.remove_node(pos)
	print("moved!")
end
function turtle.turnRight()
	local pos = active_systems[sys.id].pos
	local node = minetest.get_node(pos)
	node.param2 = node.param2 + 1
	if node.param2 > 3 then node.param2 = 0 end
	minetest.set_node(pos,node)
end
return turtle
